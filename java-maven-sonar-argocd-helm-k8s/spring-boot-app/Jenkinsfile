pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }    

  environment {
    DOCKER_USERNAME = "aashisaxena15"
    APP_NAME = "java-mvn-cicd"
    IMAGE_TAG = "${BUILD_NUMBER}"
    IMAGE_NAME = "${DOCKER_USERNAME}/${APP_NAME}"
    SONAR_URL = "http://4.240.84.236:9000"
  }

  stages {
    stage('Check Docker Access') {
      steps {
        sh 'docker --version'
        sh 'docker ps'
      }
    }

    stage('Checkout') {
      steps {
        echo "Checkout stage started"
        git branch: 'main', url: 'https://github.com/aashisaxena15/Jenkins-maven-cicd-project.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Image to DockerHub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'user', passwordVariable: 'pass')]) {
          script {
            sh '''
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
              docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
            '''
            def dockerImage = docker.image("${IMAGE_NAME}:${IMAGE_TAG}")
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage("Delete Local Docker Image") {
      steps {
        sh "docker rmi ${IMAGE_NAME}:${IMAGE_TAG}"
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-maven-cicd-project"
        GIT_USER_NAME = "aashisaxena15"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'github_token')]) {
          sh '''
            git config user.email "ci@example.com"
            git config user.name "ci-bot"

            echo "Replacing image tag with ${IMAGE_TAG}"
            sed -i "s|image: aashisaxena15/java-mvn-cicd:.*|image: ${DOCKER_USERNAME}/${APP_NAME}:${IMAGE_TAG}|g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yaml

            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yaml
            git commit -m "Update deployment image to version ${IMAGE_TAG}"
            git push https://${github_token}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
